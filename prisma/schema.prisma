// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "mysql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id                Int      @id @default(autoincrement())
  fullName          String
  email             String   @unique
  password          String
  role              Role     @default(USER)
  token             String?  @db.Text
  isVerified        Boolean  @default(false)
  verificationToken String?  @db.Text
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  kafasId    Int?
  kafas      Kafas?       @relation(fields: [kafasId], references: [id])
  KafasUsage KafasUsage[]
}

model Kafas {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  quota     Int      @default(50)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users      User[]
  KafasUsage KafasUsage[]
}

model KafasUsage {
  id        Int      @id @default(autoincrement())
  kafasId   Int
  kafas     Kafas    @relation(fields: [kafasId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
